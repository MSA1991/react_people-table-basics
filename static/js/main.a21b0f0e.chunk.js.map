{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/Home.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","pages/People.tsx","pages/NotFound.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","Home","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","people","params","useParams","getParent","parentName","parent","find","name","slug","sex","map","person","born","died","fatherName","motherName","People","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","useEffect","peopleFromData","catch","finally","length","NotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a21b0f0e.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const Home = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const params = useParams();\n\n  const getParent = (parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const parent = people.find(({ name }) => name === parentName);\n\n    if (parent) {\n      const { slug, sex, name } = parent;\n\n      return (\n        <Link\n          to={`../${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      );\n    }\n\n    return parentName;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {people.map(person => {\n          const {\n            born,\n            died,\n            fatherName,\n            motherName,\n            sex,\n            name,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': params.slug === slug,\n              })}\n            >\n              <td>\n                <Link\n                  to={`../${slug}`}\n                  className={classNames({ 'has-text-danger': sex === 'f' })}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{getParent(motherName)}</td>\n              <td>{getParent(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromData => setPeople(peopleFromData))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!hasError && !people?.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { Home } from './pages/Home';\nimport { People } from './pages/People';\nimport { NotFound } from './pages/NotFound';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<People />} />\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}